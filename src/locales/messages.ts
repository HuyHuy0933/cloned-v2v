import { title } from "process";
import { translations } from "./translations";

/**
 * This function has two roles:
 * 1) If the `id` is empty it assings something so does i18next doesn't throw error. Typescript should prevent this anyway
 * 2) It has a hand-picked name `_t` (to be short) and should only be used while using objects instead of strings for translation keys
 * `internals/extractMessages/stringfyTranslations.js` script converts this to `t('a.b.c')` style before `i18next-scanner` scans the file contents
 * so that our json objects can also be recognized by the scanner.
 */
const _t = (id: string, ...rest: any[]): [string, ...any[]] => {
  if (!id) {
    id = "_NOT_TRANSLATED_";
  }
  return [id, ...rest];
};

export const tMessages = {
  bottomTabs: {
    recorder: () => _t(translations.bottomTabs.recorder),
    conversation: () => _t(translations.bottomTabs.conversation),
    recordedAudios: () => _t(translations.bottomTabs.recordedAudios),
    meeting: () => _t(translations.bottomTabs.meeting),
  },
  common: {
    uploading: () => _t(translations.common.uploading),
    startRecording: () => _t(translations.common.startRecording),
    stopRecording: () => _t(translations.common.stopRecording),
    startRecordingNote: () => _t(translations.common.startRecordingNote),
    finedTuneTitle: () => _t(translations.common.finedTuneTitle),
    finedTuneHint: () => _t(translations.common.finedTuneHint),
    pressCompleteNote: () => _t(translations.common.pressCompleteNote),
    saveToDeviceConfirm: () => _t(translations.common.saveToDeviceConfirm),
    yes: () => _t(translations.common.yes),
    no: () => _t(translations.common.no),
    doneRecording: () => _t(translations.common.doneRecording),
    face2FaceMode: () => _t(translations.common.face2FaceMode),
    parallelMode: () => _t(translations.common.parallelMode),
    converNote1: () => _t(translations.common.converNote1),
    converNote2: () => _t(translations.common.converNote2),
    converNote3: () => _t(translations.common.converNote3),
    converNote4: () => _t(translations.common.converNote4),
    converNote5: () => _t(translations.common.converNote5),
    converNote6: () => _t(translations.common.converNote6),
    converNote7: () => _t(translations.common.converNote7),
    converNote8: () => _t(translations.common.converNote8),
    converNote9: () => _t(translations.common.converNote9),
    endConversation: () => _t(translations.common.endConversation),
    complete: () => _t(translations.common.complete),
    generalFinedTune: () => _t(translations.common.generalFinedTune),
    financeFinedTune: () => _t(translations.common.financeFinedTune),
    longFinanceFinedTune: () => _t(translations.common.longFinanceFinedTune),
    noSave: () => _t(translations.common.noSave),
    save: () => _t(translations.common.save),
    removeNoiseTitle: () => _t(translations.common.removeNoiseTitle),
    performMasking: () => _t(translations.common.performMasking),
    selectFile: () => _t(translations.common.selectFile),
    search: () => _t(translations.common.search),
    uploadModalTitle: () => _t(translations.common.uploadModalTitle),
    clickButtonAndSelectFile: () =>
      _t(translations.common.clickButtonAndSelectFile),
    upload: () => _t(translations.common.upload),
    finedTuneLabel: () => _t(translations.common.finedTuneLabel),
    numOfSpeakers: () => _t(translations.common.numOfSpeakers),
    AISummary: () => _t(translations.common.AISummary),
    AISummarySkipped: () => _t(translations.common.AISummarySkipped),
    summaryAITemplate: () => _t(translations.common.summaryAITemplate),
    noRecordHistory: () => _t(translations.common.noRecordHistory),
    wantToRecordOrUpload: () => _t(translations.common.wantToRecordOrUpload),
    deleteRecordConfirm: () => _t(translations.common.deleteRecordConfirm),
    createMeetingTitle: () => _t(translations.common.createMeetingTitle),
    meetingName: () => _t(translations.common.meetingName),
    meetingNamePlaceHolder: () =>
      _t(translations.common.meetingNamePlaceHolder),
    role: () => _t(translations.common.role),
    meetingContext: () => _t(translations.common.meetingContext),
    meetingCtxPlaceholder: () => _t(translations.common.meetingCtxPlaceholder),
    setPassword: () => _t(translations.common.setPassword),
    privateMeeting: () => _t(translations.common.privateMeeting),
    toHold: () => _t(translations.common.toHold),
    addBotTeamsMeetingTitle: () =>
      _t(translations.common.addBotTeamsMeetingTitle),
    addBotTeamsMeetingTitle1: () =>
      _t(translations.common.addBotTeamsMeetingTitle1),
    addBotTeamsMeetingTitle2: () =>
      _t(translations.common.addBotTeamsMeetingTitle2),
    addBotTeamsMeetingTitle3: () =>
      _t(translations.common.addBotTeamsMeetingTitle3),
    teamsURL: () => _t(translations.common.teamsURL),
    language: () => _t(translations.common.language),
    presenter: () => _t(translations.common.presenter),
    recommended: () => _t(translations.common.recommended),
    secretary: () => _t(translations.common.secretary),
    observer: () => _t(translations.common.observer),
    chairPerson: () => _t(translations.common.chairPerson),
    secretaryPCUseOnly: () => _t(translations.common.secretaryPCUseOnly),
    observerNoSpeak: () => _t(translations.common.observerNoSpeak),
    chairPersonMaxOne: () => _t(translations.common.chairPersonMaxOne),
    meetingParticipants: () => _t(translations.common.meetingParticipants),
    saveMeetingConfirm: () => _t(translations.common.saveMeetingConfirm),
    kickoutIn10Sec: () => _t(translations.common.kickoutIn10Sec),
    tapToStay: () => _t(translations.common.tapToStay),
    meetingQAPlaceholder: () => _t(translations.common.meetingQAPlaceholder),
    thread: () => _t(translations.common.thread),
    question: () => _t(translations.common.question),
    send: () => _t(translations.common.send),
    editMsg: () => _t(translations.common.editMsg),
    replyInThread: () => _t(translations.common.replyInThread),
    highlightMsg: () => _t(translations.common.highlightMsg),
    enterMsgPlaceholder: () => _t(translations.common.enterMsgPlaceholder),
    replies: () => _t(translations.common.replies),
    lastReply: () => _t(translations.common.lastReply),
    yearsAgo: () => _t(translations.common.yearsAgo),
    monthsAgo: () => _t(translations.common.monthsAgo),
    daysAgo: () => _t(translations.common.daysAgo),
    hoursAgo: () => _t(translations.common.hoursAgo),
    minutesAgo: () => _t(translations.common.minutesAgo),
    secondsAgo: () => _t(translations.common.secondsAgo),
    justNow: () => _t(translations.common.justNow),
    myPage: () => _t(translations.common.myPage),
    accountManage: () => _t(translations.common.accountManage),
    microphoneTest: () => _t(translations.common.microphoneTest),
    message: () => _t(translations.common.message),
    setting: () => _t(translations.common.setting),
    help: () => _t(translations.common.help),
    logout: () => _t(translations.common.logout),
    name: () => _t(translations.common.name),
    photograph: () => _t(translations.common.photograph),
    emptyInbox: () => _t(translations.common.emptyInbox),
    noticeIfHasInbox: () => _t(translations.common.noticeIfHasInbox),
    logoutConfirm: () => _t(translations.common.logoutConfirm),
    sttSettings: () => _t(translations.common.sttSettings),
    sttV1: () => _t(translations.common.sttV1),
    sttV2: () => _t(translations.common.sttV2),
    sttV3: () => _t(translations.common.sttV3),
    ttsSettings: () => _t(translations.common.ttsSettings),
    ttsNoClonedV1: () => _t(translations.common.ttsNoClonedV1),
    ttsNoClonedV2: () => _t(translations.common.ttsNoClonedV2),
    ttsNoClonedJPOnly: () => _t(translations.common.ttsNoClonedJPOnly),
    ttsCloned: () => _t(translations.common.ttsCloned),
    meetingTTSSettings: () => _t(translations.common.meetingTTSSettings),
    meetingTTSPlayWhileSpeaking: () =>
      _t(translations.common.meetingTTSPlayWhileSpeaking),
    meetingTTSPlayAfterSpeaking: () =>
      _t(translations.common.meetingTTSPlayAfterSpeaking),
    meetingSTTSettings: () => _t(translations.common.meetingSTTSettings),
    voiceCloned: () => _t(translations.common.voiceCloned),
    breathingTime: () => _t(translations.common.breathingTime),
    voiceCloneRegistration: () =>
      _t(translations.common.voiceCloneRegistration),
    cloneVoice: () => _t(translations.common.cloneVoice),
    voiceClonedList: () => _t(translations.common.voiceClonedList),
    translationSettings: () => _t(translations.common.translationSettings),
    translationOnly: () => _t(translations.common.translationOnly),
    openAITranslation: () => _t(translations.common.openAITranslation),
    geminiTranslation: () => _t(translations.common.geminiTranslation),
    autoPhraseList: () => _t(translations.common.autoPhraseList),
    autoPhraseListPlaceHolder: () =>
      _t(translations.common.autoPhraseListPlaceHolder),
    conversationSettings: () => _t(translations.common.conversationSettings),
    conversationTTSSettings: () =>
      _t(translations.common.conversationTTSSettings),
    conversationSTTSettings: () =>
      _t(translations.common.conversationSTTSettings),
    autoPlay: () => _t(translations.common.autoPlay),
    notAutoPlay: () => _t(translations.common.notAutoPlay),
    notBackTranslate: () => _t(translations.common.notBackTranslate),
    backTranslate: () => _t(translations.common.backTranslate),
    leftVoice: () => _t(translations.common.leftVoice),
    rightVoice: () => _t(translations.common.rightVoice),
    leftBreathTime: () => _t(translations.common.leftBreathTime),
    rightBreathTime: () => _t(translations.common.rightBreathTime),
    fastTalk: () => _t(translations.common.fastTalk),
    usually: () => _t(translations.common.usually),
    maskingWords: () => _t(translations.common.maskingWords),
    maskingWordsPlaceholder: () =>
      _t(translations.common.maskingWordsPlaceholder),
    developerSettings: () => _t(translations.common.developerSettings),
    speed: () => _t(translations.common.speed),
    slow: () => _t(translations.common.slow),
    fast: () => _t(translations.common.fast),
    emotion: () => _t(translations.common.emotion),
    neutral: () => _t(translations.common.neutral),
    anger: () => _t(translations.common.anger),
    disgust: () => _t(translations.common.disgust),
    fear: () => _t(translations.common.fear),
    happy: () => _t(translations.common.happy),
    sad: () => _t(translations.common.sad),
    surprise: () => _t(translations.common.surprise),
    gender: () => _t(translations.common.gender),
    male: () => _t(translations.common.male),
    female: () => _t(translations.common.female),
    tone: () => _t(translations.common.tone),
    pitch: () => _t(translations.common.pitch),
    pitchScaleNote: () => _t(translations.common.pitchScaleNote),
    intonation: () => _t(translations.common.intonation),
    low: () => _t(translations.common.low),
    high: () => _t(translations.common.high),
    less: () => _t(translations.common.less),
    aLot: () => _t(translations.common.aLot),
    userPrompt: () => _t(translations.common.userPrompt),
    systemPrompt: () => _t(translations.common.systemPrompt),
    termsOfUse: () => _t(translations.common.termsOfUse),
    resetSettingConfirm: () => _t(translations.common.resetSettingConfirm),
    processingAudio: () => _t(translations.common.processingAudio),
    copied: () => _t(translations.common.copied),
    summaryAI: () => _t(translations.common.summaryAI),
    transcription: () => _t(translations.common.transcription),
    notAnswered: () => _t(translations.common.notAnswered),
    answered: () => _t(translations.common.answered),
    maxClonedSamples: () => _t(translations.common.maxClonedSamples),
    clonedVoiceTipTitle: () => _t(translations.common.clonedVoiceTipTitle),
    clonedVoiceTip1: () => _t(translations.common.clonedVoiceTip1),
    clonedVoiceTip2: () => _t(translations.common.clonedVoiceTip2),
    clonedVoiceTip3: () => _t(translations.common.clonedVoiceTip3),
    clonedVoiceTip4: () => _t(translations.common.clonedVoiceTip4),
    clonedVoiceTip5: () => _t(translations.common.clonedVoiceTip5),
    clonedVoiceTip6: () => _t(translations.common.clonedVoiceTip6),
    clonedVoiceTip7: () => _t(translations.common.clonedVoiceTip7),
    audioSamplesRegisteredIn: () =>
      _t(translations.common.audioSamplesRegisteredIn),
    startRecording2: () => _t(translations.common.startRecording2),
    endRecording: () => _t(translations.common.endRecording),
    recordThankYou: () => _t(translations.common.recordThankYou),
    processVoiceTake1Min: () => _t(translations.common.processVoiceTake1Min),
    enterVoiceName: () => _t(translations.common.enterVoiceName),
    enterVoiceNamePlaceholder: () =>
      _t(translations.common.enterVoiceNamePlaceholder),
    startCloning: () => _t(translations.common.startCloning),
    recording: () => _t(translations.common.recording),
    pause: () => _t(translations.common.pause),
    clonedVoiceList: () => _t(translations.common.clonedVoiceList),
    myRegisteredVoice: () => _t(translations.common.myRegisteredVoice),
    systemVoice: () => _t(translations.common.systemVoice),
    deleteVoiceConfirm: () => _t(translations.common.deleteVoiceConfirm),
    you: () => _t(translations.common.you),
    participants: () => _t(translations.common.participants),
    languageSetting: () => _t(translations.common.languageSetting),
    customVoiceUsageAmount: () =>
      _t(translations.common.customVoiceUsageAmount),
    audioSamplesUsageAmount: () =>
      _t(translations.common.audioSamplesUsageAmount),
    storageUsageTime: () => _t(translations.common.storageUsageTime),
    noiseSuppressionUsageTime: () =>
      _t(translations.common.noiseSuppressionUsageTime),
    AIUsageAmount: () => _t(translations.common.AIUsageAmount),
    meetingUsageTime: () => _t(translations.common.meetingUsageTime),
    sttUsageTime: () => _t(translations.common.sttUsageTime),
    ttsUsageChars: () => _t(translations.common.ttsUsageChars),
    cloneVoiceUsageChars: () => _t(translations.common.cloneVoiceUsageChars),
    translatedUsageChars: () => _t(translations.common.translatedUsageChars),
    minutes: () => _t(translations.common.minutes),
    hours: () => _t(translations.common.hours),
    seconds: () => _t(translations.common.seconds),
    mins: () => _t(translations.common.mins),
    hrs: () => _t(translations.common.hrs),
    secs: () => _t(translations.common.secs),
    breathTimeDesc1: () => _t(translations.common.breathTimeDesc1),
    breathTimeDesc2: () => _t(translations.common.breathTimeDesc2),
    breathTimeDesc3: () => _t(translations.common.breathTimeDesc3),
    confirm: () => _t(translations.common.confirm),
    chooseLanguageConfirm: () => _t(translations.common.chooseLanguageConfirm),
    changeLaterInProfile: () => _t(translations.common.changeLaterInProfile),
    meetingPasscodeLimit: () => _t(translations.common.meetingPasscodeLimit),
    meetingPasscodeInvalid: () =>
      _t(translations.common.meetingPasscodeInvalid),
    meeingPasscodePrompt: () => _t(translations.common.meetingPasscodePrompt),
    joinMeeting: () => _t(translations.common.joinMeeting),
    teamsURLPlaceholder: () => _t(translations.common.teamsURLPlaceholder),
    add: () => _t(translations.common.add),
    return: () => _t(translations.common.return),
    endMeetingConfirm: () => _t(translations.common.endMeetingConfirm),
    chairPersonEndMeetingConfirm: () =>
      _t(translations.common.chairPersonEndMeetingConfirm),
    cancel: () => _t(translations.common.cancel),
    end: () => _t(translations.common.end),
    agenda: () => _t(translations.common.agenda),
    decisions: () => _t(translations.common.decisions),
    todo: () => _t(translations.common.todo),
    summary: () => _t(translations.common.summary),
    askChatBotMeeting: () => _t(translations.common.askChatBotMeeting),
    askChatBotTopicToTalk: () => _t(translations.common.askChatBotTopicToTalk),
    aiChatTyping: () => _t(translations.common.aiChatTyping),
    pleaseAsk: () => _t(translations.common.pleaseAsk),
    aiChat: () => _t(translations.common.aiChat),
    selectMeeting: () => _t(translations.common.selectMeeting),
    askAnother: () => _t(translations.common.askAnother),
    changeMeeting: () => _t(translations.common.changeMeeting),
    autoDeletedChat: () => _t(translations.common.autoDeletedChat),
    none: () => _t(translations.common.none),
    enterMessage: () => _t(translations.common.enterMessage),
    today: () => _t(translations.common.today),
    yesterday: () => _t(translations.common.yesterday),
    unexpectedError: () => _t(translations.common.unexpectedError),
    goHome: () => _t(translations.common.goHome),
    goBack: () => _t(translations.common.goBack),
    confirmation: () => _t(translations.common.confirmation),
    botLangNotYou: () => _t(translations.common.botLangNotYou),
    selectTeamsNameModalTitle: () =>
      _t(translations.common.selectTeamsNameModalTitle),
    waitingBot: () => _t(translations.common.waitingBot),
    trial: () => _t(translations.common.trial),
    downloading: () => _t(translations.common.downloading),
    multiUnmutedUsers: () => _t(translations.common.multiUnmutedUsers),
    copyMeetingLink: () => _t(translations.common.copyMeetingLink),
    botHasLeft: () => _t(translations.common.botHasLeft),
    answer: () => _t(translations.common.answer),
    findingLocation: () => _t(translations.common.findingLocation),
    location: () => _t(translations.common.location),
    copiedMeetingLink: () => _t(translations.common.copiedMeetingLink),
    onlineV2V: () => _t(translations.common.onlineV2V),
    checkNetwork: () => _t(translations.common.checkNetwork),
    internetConnected: () => _t(translations.common.internetConnected),
    internetDisconnected: () => _t(translations.common.internetDisconnected),
    enterRoom: () => _t(translations.common.enterRoom),
    speakSlowly: () => _t(translations.common.speakSlowly),
    unmuteAll: () => _t(translations.common.unmuteAll),
    muteAll: () => _t(translations.common.muteAll),
    originAudio: () => _t(translations.common.originAudio),
    interpretation: () => _t(translations.common.interpretation),
    holdStopRecording: () => _t(translations.common.holdStopRecording),
    removeNoiseTitleHint: () => _t(translations.common.removeNoiseTitleHint),
    performMaskingHint: () => _t(translations.common.performMaskingHint),
    networkGood: () => _t(translations.common.networkGood),
    networkFair: () => _t(translations.common.networkFair),
    networkModerate: () => _t(translations.common.networkModerate),
    networkPoor: () => _t(translations.common.networkPoor),
    networkOffline: () => _t(translations.common.networkOffline),
    audioDeviceSetting: () => _t(translations.common.audioDeviceSetting),
    addV2VBotTeamsMeeting: () => _t(translations.common.addV2VBotTeamsMeeting),
    holdV2VConference: () => _t(translations.common.holdV2VConference),
    userMetadataModalTitle: () =>
      _t(translations.common.userMetadataModalTitle),
    userMetadataModalSubTitle: () =>
      _t(translations.common.userMetadataModalSubTitle),
    area: () => _t(translations.common.area),
    branch: () => _t(translations.common.branch),
    emailAddress: () => _t(translations.common.emailAddress),
    returnToSettings: () => _t(translations.common.returnToSettings),
    confirmationCompleted: () => _t(translations.common.confirmationCompleted),
    hasEnteredRoom: () => _t(translations.common.hasEnteredRoom),
    hasLeftRoom: () => _t(translations.common.hasLeftRoom),
    usageTitle: () => _t(translations.common.usageTitle),
    fontSize: () => _t(translations.common.fontSize),
    smaller: () => _t(translations.common.smaller),
    bigger: () => _t(translations.common.bigger),
    leaving: () => _t(translations.common.leaving),
    guestUsed: () => _t(translations.common.guestUsed),
    highSpeed: () => _t(translations.common.highSpeed),
    storeName: () => _t(translations.common.storeName),
    fullName: () => _t(translations.common.fullName),
    mp3FileSizeLimit: () => _t(translations.common.mp3FileSizeLimit),
    fileTooLarge: () => _t(translations.common.fileTooLarge),
    meetingStopAlert: () => _t(translations.common.meetingStopAlert),
    sttSettingTab: () => _t(translations.common.sttSettingTab),
    aiSettingTab: () => _t(translations.common.aiSettingTab),
    ttsSettingTab: () => _t(translations.common.ttsSettingTab),
    recorderEntityExtraction: () =>
      _t(translations.common.recorderEntityExtraction),
    recorderTrancriptSharing: () =>
      _t(translations.common.recorderTrancriptSharing),
    entityExtractionDesc: () => _t(translations.common.entityExtractionDesc),
    trancriptSharingDesc: () => _t(translations.common.trancriptSharingDesc),
    supportedLanguagesText: () =>
      _t(translations.common.supportedLanguagesText),
    spacySupportedLanguages: () =>
      _t(translations.common.spacySupportedLanguages),
    entityExtraction: () => _t(translations.common.entityExtraction),
    recordingPaused: () => _t(translations.common.recordingPaused),
    recordingResumed: () => _t(translations.common.recordingResumed),
    recordingStopped: () => _t(translations.common.recordingStopped),
    entityTabTitle: () => _t(translations.common.entityTabTitle),
    entityTabBottomTitle: () => _t(translations.common.entityTabBottomTitle),
    entityTabSubTitle: () => _t(translations.common.entityTabSubTitle),
    startProcessing: () => _t(translations.common.startProcessing),
    paused: () => _t(translations.common.paused),
    ended: () => _t(translations.common.ended),
    selectAll: () => _t(translations.common.selectAll),
    deselectAll: () => _t(translations.common.deselectAll),
    sentiment: () => _t(translations.common.sentiment),
    analyzeSentiment: () => _t(translations.common.analyzeSentiment),
    analyzeSentimentLonger: () =>
      _t(translations.common.analyzeSentimentLonger),
    rowsPerPage: () => _t(translations.common.rowsPerPage),
    pageIndexOfTotal: () => _t(translations.common.pageIndexOfTotal),
    showingPageRowsOfTotal: () =>
      _t(translations.common.showingPageRowsOfTotal),
    recordSpeakerSegment: () => _t(translations.common.recordSpeakerSegment),
    addCustomEntity: () => _t(translations.common.addCustomEntity),
    enterEntityPlaceholder: () =>
      _t(translations.common.enterEntityPlaceholder),
    enterWordsPlayholder: () => _t(translations.common.enterWordsPlayholder),
    addEntity: () => _t(translations.common.addEntity),
    syncNow: () => _t(translations.common.syncNow),
    syncing: () => _t(translations.common.syncing),
    synced: () => _t(translations.common.synced),
    refreshingPage: () => _t(translations.common.refreshingPage),
    textCopied: () => _t(translations.common.textCopied),
    share: () => _t(translations.common.share),
    download: () => _t(translations.common.download),
    copy: () => _t(translations.common.copy),
    entity: () => _t(translations.common.entity),
    hide: () => _t(translations.common.hide),
    show: () => _t(translations.common.show),
    sort: () => _t(translations.common.sort),
    filter: () => _t(translations.common.filter),
    date: () => _t(translations.common.date),
    title: () => _t(translations.common.title),
    duration: () => _t(translations.common.duration),
    reset: () => _t(translations.common.reset),
    all: () => _t(translations.common.all),
    startingSession: () => _t(translations.common.startingSession),
    start: () => _t(translations.common.start),
    skip: () => _t(translations.common.skip),
    close: () => _t(translations.common.close),
    finish: () => _t(translations.common.finish),
    commingSoon: () => _t(translations.common.commingSoon),
    next: () => _t(translations.common.next),
    tutorial: () => _t(translations.common.tutorial),
    financeModelWarning: () => _t(translations.common.financeModelWarning),
    notStarted: () => _t(translations.common.notStarted),
    pending: () => _t(translations.common.pending),
    joinRecordingModalTitle: () => _t(translations.common.joinRecordingModalTitle),
    teamsUrlFormat: () => _t(translations.common.teamsUrlFormat),
    addPeople: () => _t(translations.common.addPeople),
    myFavorite: () => _t(translations.common.myFavorite),
    whospeaksModelWarning: () => _t(translations.common.whospeaksModelWarning),
    edit: () => _t(translations.common.edit),
    save2: () => _t(translations.common.save2),
    untitledAudio: () => _t(translations.common.untitledAudio),
    enterAnswerPlaceholder: () => _t(translations.common.enterAnswerPlaceholder),
    participants2: () => _t(translations.common.participants2),
    keyword: () => _t(translations.common.keyword),
    length: () => _t(translations.common.length),
    original: () => _t(translations.common.original),
    showOriginText: () => _t(translations.common.showOriginText),
    uploadAttachmentPlaceholder: () => _t(translations.common.uploadAttachmentPlaceholder),
    attachments: () => _t(translations.common.attachments),
    size: () => _t(translations.common.size),
    deleteAttachmentConfirm: () => _t(translations.common.deleteAttachmentConfirm),
    failToUpload: () => _t(translations.common.failToUpload),
    fileSizeLimit: () => _t(translations.common.fileSizeLimit),
    answering: () => _t(translations.common.answering),
    emptyAttachment1: () => _t(translations.common.emptyAttachment1),
    emptyAttachment2: () => _t(translations.common.emptyAttachment2),
    kuritaFineTuned: () => _t(translations.common.kuritaFineTuned),
    processing: () => _t(translations.common.processing),
    advancedSettings: () => _t(translations.common.advancedSettings),
    saveAudioAdvancedSettingsNote: () => _t(translations.common.saveAudioAdvancedSettingsNote),
    AISummaryHint: () => _t(translations.common.AISummaryHint),
  },
  usageTooltip: {
    numVoiceClones: () => _t(translations.usageTooltip.numVoiceClones),
    numVoiceClonesDesc: () => _t(translations.usageTooltip.numVoiceClonesDesc),
    numVoiceSamples: () => _t(translations.usageTooltip.numVoiceSamples),
    numVoiceSamplesDesc: () =>
      _t(translations.usageTooltip.numVoiceSamplesDesc),
    storageUsage: () => _t(translations.usageTooltip.storageUsage),
    storageUsageDesc: () => _t(translations.usageTooltip.storageUsageDesc),
    noiseReductionTime: () => _t(translations.usageTooltip.noiseReductionTime),
    noiseReductionTimeDesc: () =>
      _t(translations.usageTooltip.noiseReductionTimeDesc),
    AIUsageToken: () => _t(translations.usageTooltip.AIUsageToken),
    AIUsageTokenDesc: () => _t(translations.usageTooltip.AIUsageTokenDesc),
    meetingJoinTime: () => _t(translations.usageTooltip.meetingJoinTime),
    meetingJoinTimeDesc: () =>
      _t(translations.usageTooltip.meetingJoinTimeDesc),
    STTUsageTime: () => _t(translations.usageTooltip.STTUsageTime),
    STTUsageTimeDesc: () => _t(translations.usageTooltip.STTUsageTimeDesc),
    TTSUsageTime: () => _t(translations.usageTooltip.TTSUsageTime),
    TTSUsageTimeDesc: () => _t(translations.usageTooltip.TTSUsageTimeDesc),
    numTTSCharacters: () => _t(translations.usageTooltip.numTTSCharacters),
    numTTSCharactersDesc: () =>
      _t(translations.usageTooltip.numTTSCharactersDesc),
    transCharacterCount: () =>
      _t(translations.usageTooltip.transCharacterCount),
    transCharacterCountDesc: () =>
      _t(translations.usageTooltip.transCharacterCountDesc),
  },
  finedTuneTooltip: {
    title: () => _t(translations.finedTuneTooltip.title),
    description: () => _t(translations.finedTuneTooltip.description),
    selectSettings: () => _t(translations.finedTuneTooltip.selectSettings),
    general: () => _t(translations.finedTuneTooltip.general),
    generalDesc: () => _t(translations.finedTuneTooltip.generalDesc),
    finance: () => _t(translations.finedTuneTooltip.finance),
    financeDesc: () => _t(translations.finedTuneTooltip.financeDesc),
  },
  summaryAITemplate: {
    interview: () => _t(translations.summaryAITemplate.interview),
    meeting: () => _t(translations.summaryAITemplate.meeting),
    podcast: () => _t(translations.summaryAITemplate.podcast),
    business: () => _t(translations.summaryAITemplate.business),
    presentation: () => _t(translations.summaryAITemplate.presentation),
    workshop: () => _t(translations.summaryAITemplate.workshop),
    discussion: () => _t(translations.summaryAITemplate.discussion),
  },
  summaryAITemplateDetail: {
    description: () => _t(translations.summaryAITemplateDetail.description),
    interview: {
      item1: () => _t(translations.summaryAITemplateDetail.interview.item1),
      item2: () => _t(translations.summaryAITemplateDetail.interview.item2),
      item3: () => _t(translations.summaryAITemplateDetail.interview.item3),
      item4: () => _t(translations.summaryAITemplateDetail.interview.item4),
      item5: () => _t(translations.summaryAITemplateDetail.interview.item5),
    },
    meeting: {
      item1: () => _t(translations.summaryAITemplateDetail.meeting.item1),
      item2: () => _t(translations.summaryAITemplateDetail.meeting.item2),
      item3: () => _t(translations.summaryAITemplateDetail.meeting.item3),
      item4: () => _t(translations.summaryAITemplateDetail.meeting.item4),
      item5: () => _t(translations.summaryAITemplateDetail.meeting.item5),
    },
    podcast: {
      item1: () => _t(translations.summaryAITemplateDetail.podcast.item1),
      item2: () => _t(translations.summaryAITemplateDetail.podcast.item2),
      item3: () => _t(translations.summaryAITemplateDetail.podcast.item3),
      item4: () => _t(translations.summaryAITemplateDetail.podcast.item4),
      item5: () => _t(translations.summaryAITemplateDetail.podcast.item5),
    },
    business: {
      item1: () => _t(translations.summaryAITemplateDetail.business.item1),
      item2: () => _t(translations.summaryAITemplateDetail.business.item2),
      item3: () => _t(translations.summaryAITemplateDetail.business.item3),
      item4: () => _t(translations.summaryAITemplateDetail.business.item4),
      item5: () => _t(translations.summaryAITemplateDetail.business.item5),
    },
    presentation: {
      item1: () => _t(translations.summaryAITemplateDetail.presentation.item1),
      item2: () => _t(translations.summaryAITemplateDetail.presentation.item2),
      item3: () => _t(translations.summaryAITemplateDetail.presentation.item3),
      item4: () => _t(translations.summaryAITemplateDetail.presentation.item4),
      item5: () => _t(translations.summaryAITemplateDetail.presentation.item5),
    },
    workshop: {
      item1: () => _t(translations.summaryAITemplateDetail.workshop.item1),
      item2: () => _t(translations.summaryAITemplateDetail.workshop.item2),
      item3: () => _t(translations.summaryAITemplateDetail.workshop.item3),
      item4: () => _t(translations.summaryAITemplateDetail.workshop.item4),
      item5: () => _t(translations.summaryAITemplateDetail.workshop.item5),
    },
    discussion: {
      item1: () => _t(translations.summaryAITemplateDetail.discussion.item1),
      item2: () => _t(translations.summaryAITemplateDetail.discussion.item2),
      item3: () => _t(translations.summaryAITemplateDetail.discussion.item3),
      item4: () => _t(translations.summaryAITemplateDetail.discussion.item4),
      item5: () => _t(translations.summaryAITemplateDetail.discussion.item5),
    },
  },
  meetingRoleTooltip: {
    presenterDesc1: () => _t(translations.meetingRoleTooltip.presenterDesc1),
    presenterDesc2: () => _t(translations.meetingRoleTooltip.presenterDesc2),
    presenterDesc3: () => _t(translations.meetingRoleTooltip.presenterDesc3),
    secretaryDesc1: () => _t(translations.meetingRoleTooltip.secretaryDesc1),
    secretaryDesc2: () => _t(translations.meetingRoleTooltip.secretaryDesc2),
    observerDesc1: () => _t(translations.meetingRoleTooltip.observerDesc1),
    observerDesc2: () => _t(translations.meetingRoleTooltip.observerDesc2),
    observerDesc3: () => _t(translations.meetingRoleTooltip.observerDesc3),
    chairPersonDesc1: () =>
      _t(translations.meetingRoleTooltip.chairPersonDesc1),
    chairPersonDesc2: () =>
      _t(translations.meetingRoleTooltip.chairPersonDesc2),
    bottomNote: () => _t(translations.meetingRoleTooltip.bottomNote),
  },
  meetingCtxTooltip: {
    desc: () => _t(translations.meetingCtxTooltip.desc),
  },
  termsOfUseTooltip: {
    title: () => _t(translations.termsOfUseTooltip.title),
    desc1: () => _t(translations.termsOfUseTooltip.desc1),
    desc2: () => _t(translations.termsOfUseTooltip.desc2),
    desc3: () => _t(translations.termsOfUseTooltip.desc3),
    desc4: () => _t(translations.termsOfUseTooltip.desc4),
    term1: () => _t(translations.termsOfUseTooltip.term1),
    term1Desc1: () => _t(translations.termsOfUseTooltip.term1Desc1),
    term1Desc2: () => _t(translations.termsOfUseTooltip.term1Desc2),
    term2: () => _t(translations.termsOfUseTooltip.term2),
    term2Desc: () => _t(translations.termsOfUseTooltip.term2Desc),
    term3: () => _t(translations.termsOfUseTooltip.term3),
    term3Desc1: () => _t(translations.termsOfUseTooltip.term3Desc1),
    term3Desc2: () => _t(translations.termsOfUseTooltip.term3Desc2),
    term4: () => _t(translations.termsOfUseTooltip.term4),
    term4Desc1: () => _t(translations.termsOfUseTooltip.term4Desc1),
    term5: () => _t(translations.termsOfUseTooltip.term5),
    term5Desc1: () => _t(translations.termsOfUseTooltip.term5Desc1),
    term5Desc2: () => _t(translations.termsOfUseTooltip.term5Desc2),
    term5Desc3: () => _t(translations.termsOfUseTooltip.term5Desc3),
    term5Desc4: () => _t(translations.termsOfUseTooltip.term5Desc4),
    term5Desc5: () => _t(translations.termsOfUseTooltip.term5Desc5),
    term5Desc6: () => _t(translations.termsOfUseTooltip.term5Desc6),
    term5Desc7: () => _t(translations.termsOfUseTooltip.term5Desc7),
    term6: () => _t(translations.termsOfUseTooltip.term6),
    term6Desc1: () => _t(translations.termsOfUseTooltip.term6Desc1),
    term6Desc2: () => _t(translations.termsOfUseTooltip.term6Desc2),
    term6Desc3: () => _t(translations.termsOfUseTooltip.term6Desc3),
    term6Desc4: () => _t(translations.termsOfUseTooltip.term6Desc4),
    term7: () => _t(translations.termsOfUseTooltip.term7),
    term7Desc1: () => _t(translations.termsOfUseTooltip.term7Desc1),
    term7Desc2: () => _t(translations.termsOfUseTooltip.term7Desc2),
    term7Desc3: () => _t(translations.termsOfUseTooltip.term7Desc3),
    term7Desc4: () => _t(translations.termsOfUseTooltip.term7Desc4),
    term8: () => _t(translations.termsOfUseTooltip.term8),
    term8Desc1: () => _t(translations.termsOfUseTooltip.term8Desc1),
    term8Desc2: () => _t(translations.termsOfUseTooltip.term8Desc2),
    term9: () => _t(translations.termsOfUseTooltip.term9),
    term9Desc: () => _t(translations.termsOfUseTooltip.term9Desc),
    term10: () => _t(translations.termsOfUseTooltip.term10),
    term10Desc: () => _t(translations.termsOfUseTooltip.term10Desc),
  },
  cloneTelePrompter: {
    line1: {
      text: () => _t(translations.cloneTelePrompter.line1.text),
    },
    line2: {
      text: () => _t(translations.cloneTelePrompter.line2.text),
    },
    line3: {
      text1: () => _t(translations.cloneTelePrompter.line3.text1),
      text2: () => _t(translations.cloneTelePrompter.line3.text2),
      text3: () => _t(translations.cloneTelePrompter.line3.text3),
      text4: () => _t(translations.cloneTelePrompter.line3.text4),
      text5: () => _t(translations.cloneTelePrompter.line3.text5),
      text6: () => _t(translations.cloneTelePrompter.line3.text6),
      text7: () => _t(translations.cloneTelePrompter.line3.text7),
    },
    line4: {
      text: () => _t(translations.cloneTelePrompter.line4.text),
    },
    line5: {
      text: () => _t(translations.cloneTelePrompter.line5.text),
    },
    line6: {
      text1: () => _t(translations.cloneTelePrompter.line6.text1),
      text2: () => _t(translations.cloneTelePrompter.line6.text2),
      text3: () => _t(translations.cloneTelePrompter.line6.text3),
      text4: () => _t(translations.cloneTelePrompter.line6.text4),
      text5: () => _t(translations.cloneTelePrompter.line6.text5),
      text6: () => _t(translations.cloneTelePrompter.line6.text6),
      text7: () => _t(translations.cloneTelePrompter.line6.text7),
      text8: () => _t(translations.cloneTelePrompter.line6.text8),
      text9: () => _t(translations.cloneTelePrompter.line6.text9),
      text10: () => _t(translations.cloneTelePrompter.line6.text10),
    },
    line7: {
      text1: () => _t(translations.cloneTelePrompter.line7.text1),
      text2: () => _t(translations.cloneTelePrompter.line7.text2),
      text3: () => _t(translations.cloneTelePrompter.line7.text3),
      text4: () => _t(translations.cloneTelePrompter.line7.text4),
      text5: () => _t(translations.cloneTelePrompter.line7.text5),
      text6: () => _t(translations.cloneTelePrompter.line7.text6),
    },
    line8: {
      text1: () => _t(translations.cloneTelePrompter.line8.text1),
      text2: () => _t(translations.cloneTelePrompter.line8.text2),
      text3: () => _t(translations.cloneTelePrompter.line8.text3),
      text4: () => _t(translations.cloneTelePrompter.line8.text4),
      text5: () => _t(translations.cloneTelePrompter.line8.text5),
      text6: () => _t(translations.cloneTelePrompter.line8.text6),
    },
    line9: {
      text: () => _t(translations.cloneTelePrompter.line9.text),
    },
    line10: {
      text1: () => _t(translations.cloneTelePrompter.line10.text1),
      text2: () => _t(translations.cloneTelePrompter.line10.text2),
      text3: () => _t(translations.cloneTelePrompter.line10.text3),
      text4: () => _t(translations.cloneTelePrompter.line10.text4),
      text5: () => _t(translations.cloneTelePrompter.line10.text5),
      text6: () => _t(translations.cloneTelePrompter.line10.text6),
      text7: () => _t(translations.cloneTelePrompter.line10.text7),
    },
    line11: {
      text1: () => _t(translations.cloneTelePrompter.line11.text1),
      text2: () => _t(translations.cloneTelePrompter.line11.text2),
      text3: () => _t(translations.cloneTelePrompter.line11.text3),
      text4: () => _t(translations.cloneTelePrompter.line11.text4),
      text5: () => _t(translations.cloneTelePrompter.line11.text5),
      text6: () => _t(translations.cloneTelePrompter.line11.text6),
      text7: () => _t(translations.cloneTelePrompter.line11.text7),
    },
    line12: {
      text: () => _t(translations.cloneTelePrompter.line12.text),
    },
    line13: {
      text: () => _t(translations.cloneTelePrompter.line13.text),
    },
    line14: {
      text1: () => _t(translations.cloneTelePrompter.line14.text1),
      text2: () => _t(translations.cloneTelePrompter.line14.text2),
      text3: () => _t(translations.cloneTelePrompter.line14.text3),
      text4: () => _t(translations.cloneTelePrompter.line14.text4),
    },
    line15: {
      text: () => _t(translations.cloneTelePrompter.line15.text),
    },
    line16: {
      text: () => _t(translations.cloneTelePrompter.line16.text),
    },
    line17: {
      text: () => _t(translations.cloneTelePrompter.line17.text),
    },
    line18: {
      text1: () => _t(translations.cloneTelePrompter.line18.text1),
      text2: () => _t(translations.cloneTelePrompter.line18.text2),
      text3: () => _t(translations.cloneTelePrompter.line18.text3),
      text4: () => _t(translations.cloneTelePrompter.line18.text4),
    },
    line19: {
      text1: () => _t(translations.cloneTelePrompter.line19.text1),
      text2: () => _t(translations.cloneTelePrompter.line19.text2),
      text3: () => _t(translations.cloneTelePrompter.line19.text3),
      text4: () => _t(translations.cloneTelePrompter.line19.text4),
      text5: () => _t(translations.cloneTelePrompter.line19.text5),
      text6: () => _t(translations.cloneTelePrompter.line19.text6),
      text7: () => _t(translations.cloneTelePrompter.line19.text7),
    },
    line20: {
      text: () => _t(translations.cloneTelePrompter.line20.text),
    },
    line21: {
      text: () => _t(translations.cloneTelePrompter.line21.text),
    },
    line22: {
      text1: () => _t(translations.cloneTelePrompter.line22.text1),
      text2: () => _t(translations.cloneTelePrompter.line22.text2),
      text3: () => _t(translations.cloneTelePrompter.line22.text3),
      text4: () => _t(translations.cloneTelePrompter.line22.text4),
    },
    line23: {
      text: () => _t(translations.cloneTelePrompter.line23.text),
    },
    line24: {
      text: () => _t(translations.cloneTelePrompter.line24.text),
    },
    line25: {
      text: () => _t(translations.cloneTelePrompter.line25.text),
    },
    line26: {
      text: () => _t(translations.cloneTelePrompter.line26.text),
    },
    line27: {
      text: () => _t(translations.cloneTelePrompter.line27.text),
    },
    line28: {
      text: () => _t(translations.cloneTelePrompter.line28.text),
    },
    line29: {
      text: () => _t(translations.cloneTelePrompter.line29.text),
    },
    line30: {
      text: () => _t(translations.cloneTelePrompter.line30.text),
    },
  },
  faqs: {
    categories: {
      all: () => _t(translations.faqs.categories.all),
      usage: () => _t(translations.faqs.categories.usage),
      account: () => _t(translations.faqs.categories.account),
      system: () => _t(translations.faqs.categories.system),
      support: () => _t(translations.faqs.categories.support),
      data: () => _t(translations.faqs.categories.data),
      pricing: () => _t(translations.faqs.categories.pricing),
      other: () => _t(translations.faqs.categories.other),
    },
    usage: {
      faq1: {
        title: () => _t(translations.faqs.usage.faq1.title),
        desc: () => _t(translations.faqs.usage.faq1.desc),
      },
      faq2: {
        title: () => _t(translations.faqs.usage.faq2.title),
        desc: () => _t(translations.faqs.usage.faq2.desc),
      },
      faq3: {
        title: () => _t(translations.faqs.usage.faq3.title),
        desc: () => _t(translations.faqs.usage.faq3.desc),
      },
      faq4: {
        title: () => _t(translations.faqs.usage.faq4.title),
        desc: () => _t(translations.faqs.usage.faq4.desc),
      },
      faq5: {
        title: () => _t(translations.faqs.usage.faq5.title),
        desc: () => _t(translations.faqs.usage.faq5.desc),
      },
      faq6: {
        title: () => _t(translations.faqs.usage.faq6.title),
        desc: () => _t(translations.faqs.usage.faq6.desc),
      },
      faq7: {
        title: () => _t(translations.faqs.usage.faq7.title),
        desc: () => _t(translations.faqs.usage.faq7.desc),
      },
      faq8: {
        title: () => _t(translations.faqs.usage.faq8.title),
        desc: () => _t(translations.faqs.usage.faq8.desc),
      },
      faq9: {
        title: () => _t(translations.faqs.usage.faq9.title),
        desc: () => _t(translations.faqs.usage.faq9.desc),
      },
      faq10: {
        title: () => _t(translations.faqs.usage.faq10.title),
        desc: () => _t(translations.faqs.usage.faq10.desc),
      },
      faq11: {
        title: () => _t(translations.faqs.usage.faq11.title),
        desc: () => _t(translations.faqs.usage.faq11.desc),
      },
      faq12: {
        title: () => _t(translations.faqs.usage.faq12.title),
        desc: () => _t(translations.faqs.usage.faq12.desc),
      },
      faq13: {
        title: () => _t(translations.faqs.usage.faq13.title),
        desc: () => _t(translations.faqs.usage.faq13.desc),
      },
      faq14: {
        title: () => _t(translations.faqs.usage.faq14.title),
        desc: () => _t(translations.faqs.usage.faq14.desc),
      },
      faq15: {
        title: () => _t(translations.faqs.usage.faq15.title),
        desc: () => _t(translations.faqs.usage.faq15.desc),
      },
    },
    account: {
      faq1: {
        title: () => _t(translations.faqs.account.faq1.title),
        desc: () => _t(translations.faqs.account.faq1.desc),
      },
      faq2: {
        title: () => _t(translations.faqs.account.faq2.title),
        desc: () => _t(translations.faqs.account.faq2.desc),
      },
      faq3: {
        title: () => _t(translations.faqs.account.faq3.title),
        desc: () => _t(translations.faqs.account.faq3.desc),
      },
      faq4: {
        title: () => _t(translations.faqs.account.faq4.title),
        desc: () => _t(translations.faqs.account.faq4.desc),
      },
      faq5: {
        title: () => _t(translations.faqs.account.faq5.title),
        desc: () => _t(translations.faqs.account.faq5.desc),
      },
    },
    system: {
      faq1: {
        title: () => _t(translations.faqs.system.faq1.title),
        desc: () => _t(translations.faqs.system.faq1.desc),
      },
      faq2: {
        title: () => _t(translations.faqs.system.faq2.title),
        desc: () => _t(translations.faqs.system.faq2.desc),
      },
      faq3: {
        title: () => _t(translations.faqs.system.faq3.title),
        desc: () => _t(translations.faqs.system.faq3.desc),
      },
      faq4: {
        title: () => _t(translations.faqs.system.faq4.title),
        desc: () => _t(translations.faqs.system.faq4.desc),
      },
      faq5: {
        title: () => _t(translations.faqs.system.faq5.title),
        desc: () => _t(translations.faqs.system.faq5.desc),
      },
      faq6: {
        title: () => _t(translations.faqs.system.faq6.title),
        desc: () => _t(translations.faqs.system.faq6.desc),
      },
      faq7: {
        title: () => _t(translations.faqs.system.faq7.title),
        desc: () => _t(translations.faqs.system.faq7.desc),
      },
      faq8: {
        title: () => _t(translations.faqs.system.faq8.title),
        desc: () => _t(translations.faqs.system.faq8.desc),
      },
      faq9: {
        title: () => _t(translations.faqs.system.faq9.title),
        desc: () => _t(translations.faqs.system.faq9.desc),
      },
      faq10: {
        title: () => _t(translations.faqs.system.faq10.title),
        desc: () => _t(translations.faqs.system.faq10.desc),
      },
      faq11: {
        title: () => _t(translations.faqs.system.faq11.title),
        desc: () => _t(translations.faqs.system.faq11.desc),
      },
      faq12: {
        title: () => _t(translations.faqs.system.faq12.title),
        desc: () => _t(translations.faqs.system.faq12.desc),
      },
      faq13: {
        title: () => _t(translations.faqs.system.faq13.title),
        desc: () => _t(translations.faqs.system.faq13.desc),
      },
      faq14: {
        title: () => _t(translations.faqs.system.faq14.title),
        desc: () => _t(translations.faqs.system.faq14.desc),
      },
      faq15: {
        title: () => _t(translations.faqs.system.faq15.title),
        desc: () => _t(translations.faqs.system.faq15.desc),
      },
      faq16: {
        title: () => _t(translations.faqs.system.faq16.title),
        desc: () => _t(translations.faqs.system.faq16.desc),
      },
      faq17: {
        title: () => _t(translations.faqs.system.faq17.title),
        desc: () => _t(translations.faqs.system.faq17.desc),
      },
    },
    support: {
      faq1: {
        title: () => _t(translations.faqs.support.faq1.title),
        desc: () => _t(translations.faqs.support.faq1.desc),
      },
      faq2: {
        title: () => _t(translations.faqs.support.faq2.title),
        desc: () => _t(translations.faqs.support.faq2.desc),
      },
      faq3: {
        title: () => _t(translations.faqs.support.faq3.title),
        desc: () => _t(translations.faqs.support.faq3.desc),
      },
      faq4: {
        title: () => _t(translations.faqs.support.faq4.title),
        desc: () => _t(translations.faqs.support.faq4.desc),
      },
    },
    data: {
      faq1: {
        title: () => _t(translations.faqs.data.faq1.title),
        desc: () => _t(translations.faqs.data.faq1.desc),
      },
      faq2: {
        title: () => _t(translations.faqs.data.faq2.title),
        desc: () => _t(translations.faqs.data.faq2.desc),
      },
      faq3: {
        title: () => _t(translations.faqs.data.faq3.title),
        desc: () => _t(translations.faqs.data.faq3.desc),
      },
      faq4: {
        title: () => _t(translations.faqs.data.faq4.title),
        desc: () => _t(translations.faqs.data.faq4.desc),
      },
      faq5: {
        title: () => _t(translations.faqs.data.faq5.title),
        desc: () => _t(translations.faqs.data.faq5.desc),
      },
      faq6: {
        title: () => _t(translations.faqs.data.faq6.title),
        desc: () => _t(translations.faqs.data.faq6.desc),
      },
    },
    pricing: {
      faq1: {
        title: () => _t(translations.faqs.pricing.faq1.title),
        desc: () => _t(translations.faqs.pricing.faq1.desc),
      },
      faq2: {
        title: () => _t(translations.faqs.pricing.faq2.title),
        desc: () => _t(translations.faqs.pricing.faq2.desc),
      },
      faq3: {
        title: () => _t(translations.faqs.pricing.faq3.title),
        desc: () => _t(translations.faqs.pricing.faq3.desc),
      },
      faq4: {
        title: () => _t(translations.faqs.pricing.faq4.title),
        desc: () => _t(translations.faqs.pricing.faq4.desc),
      },
      faq5: {
        title: () => _t(translations.faqs.pricing.faq5.title),
        desc: () => _t(translations.faqs.pricing.faq5.desc),
      },
    },
    other: {
      faq1: {
        title: () => _t(translations.faqs.other.faq1.title),
        desc: () => _t(translations.faqs.other.faq1.desc),
      },
      faq2: {
        title: () => _t(translations.faqs.other.faq2.title),
        desc: () => _t(translations.faqs.other.faq2.desc),
      },
      faq3: {
        title: () => _t(translations.faqs.other.faq3.title),
        desc: () => _t(translations.faqs.other.faq3.desc),
      },
      faq4: {
        title: () => _t(translations.faqs.other.faq4.title),
        desc: () => _t(translations.faqs.other.faq4.desc),
      },
      faq5: {
        title: () => _t(translations.faqs.other.faq5.title),
        desc: () => _t(translations.faqs.other.faq5.desc),
      },
    },
  },
  language: {
    en_US: () => _t(translations.language.en_US),
    ja_JP: () => _t(translations.language.ja_JP),
    vi_VN: () => _t(translations.language.vi_VN),
    zh_CN: () => _t(translations.language.zh_CN),
    de_DE: () => _t(translations.language.de_DE),
    fr_FR: () => _t(translations.language.fr_FR),
    ko_KR: () => _t(translations.language.ko_KR),
    it_IT: () => _t(translations.language.it_IT),
    es_ES: () => _t(translations.language.es_ES),
    ru_RU: () => _t(translations.language.ru_RU),
    hi_IN: () => _t(translations.language.hi_IN),
    th_TH: () => _t(translations.language.th_TH),
    ar_SA: () => _t(translations.language.ar_SA),
  },
  meetingRemindModal: {
    title: () => _t(translations.meetingRemindModal.title),
    subTitle: () => _t(translations.meetingRemindModal.subTitle),
    desc1: () => _t(translations.meetingRemindModal.desc1),
    desc2: () => _t(translations.meetingRemindModal.desc2),
    desc3: () => _t(translations.meetingRemindModal.desc3),
    desc4: () => _t(translations.meetingRemindModal.desc4),
    desc5: () => _t(translations.meetingRemindModal.desc5),
    desc6: () => _t(translations.meetingRemindModal.desc6),
    desc7: () => _t(translations.meetingRemindModal.desc7),
    desc8: () => _t(translations.meetingRemindModal.desc8),
  },
  privateMeetingTooltip: {
    title: () => _t(translations.privateMeetingTooltip.title),
    desc1: () => _t(translations.privateMeetingTooltip.desc1),
    desc2: () => _t(translations.privateMeetingTooltip.desc2),
    desc3: () => _t(translations.privateMeetingTooltip.desc3),
    desc4: () => _t(translations.privateMeetingTooltip.desc4),
  },
  setting: {
    microphoneTooltip: () => _t(translations.setting.microphoneTooltip),
    speakerTooltip: () => _t(translations.setting.speakerTooltip),
    sttTooltip: () => _t(translations.setting.sttTooltip),
    ttsTooltip: () => _t(translations.setting.ttsTooltip),
    reverseTooltip: () => _t(translations.setting.reverseTooltip),
    reverseTooltipNote1: () => _t(translations.setting.reverseTooltipNote1),
    reverseTooltipNote2: () => _t(translations.setting.reverseTooltipNote2),
    maskingTooltip: () => _t(translations.setting.maskingTooltip),
    sttTabDesc: () => _t(translations.setting.sttTabDesc),
    aiTabDesc: () => _t(translations.setting.aiTabDesc),
    ttsTabDesc: () => _t(translations.setting.ttsTabDesc),
  },
  shareHistoryMeeting: {
    shareThisProject: () =>
      _t(translations.shareHistoryMeeting.shareThisProject),
    sendInvite: () => _t(translations.shareHistoryMeeting.sendInvite),
    whoHasAccess: () => _t(translations.shareHistoryMeeting.whoHasAccess),
    inviteOthersByNameOrEmail: () =>
      _t(translations.shareHistoryMeeting.inviteOthersByNameOrEmail),
    owner: () => _t(translations.shareHistoryMeeting.owner),
    canEdit: () => _t(translations.shareHistoryMeeting.canEdit),
    viewOnly: () => _t(translations.shareHistoryMeeting.viewOnly),
    you: () => _t(translations.shareHistoryMeeting.you),
    copyLink: () => _t(translations.shareHistoryMeeting.copyLink),
    success: () => _t(translations.shareHistoryMeeting.success),
    somethingWentWrong: () =>
      _t(translations.shareHistoryMeeting.somethingWentWrong),
  },
  clonedVoiceTips: {
    tip1: () => _t(translations.clonedVoiceTips.tip1),
    tip2: () => _t(translations.clonedVoiceTips.tip2),
    tip3: () => _t(translations.clonedVoiceTips.tip3),
    tip4: () => _t(translations.clonedVoiceTips.tip4),
    tip5: () => _t(translations.clonedVoiceTips.tip5),
    tip6: () => _t(translations.clonedVoiceTips.tip6),
    tip7: () => _t(translations.clonedVoiceTips.tip7),
  },
  entityLabel: {
    person: {
      title: () => _t(translations.entityLabel.person.title),
      desc: () => _t(translations.entityLabel.person.desc),
      example: () => _t(translations.entityLabel.person.example),
    },
    norp: {
      title: () => _t(translations.entityLabel.norp.title),
      desc: () => _t(translations.entityLabel.norp.desc),
      example: () => _t(translations.entityLabel.norp.example),
    },
    org: {
      title: () => _t(translations.entityLabel.org.title),
      desc: () => _t(translations.entityLabel.org.desc),
      example: () => _t(translations.entityLabel.org.example),
    },
    gpe: {
      title: () => _t(translations.entityLabel.gpe.title),
      desc: () => _t(translations.entityLabel.gpe.desc),
      example: () => _t(translations.entityLabel.gpe.example),
    },
    loc: {
      title: () => _t(translations.entityLabel.loc.title),
      desc: () => _t(translations.entityLabel.loc.desc),
      example: () => _t(translations.entityLabel.loc.example),
    },
    product: {
      title: () => _t(translations.entityLabel.product.title),
      desc: () => _t(translations.entityLabel.product.desc),
      example: () => _t(translations.entityLabel.product.example),
    },
    event: {
      title: () => _t(translations.entityLabel.event.title),
      desc: () => _t(translations.entityLabel.event.desc),
      example: () => _t(translations.entityLabel.event.example),
    },
    work_of_art: {
      title: () => _t(translations.entityLabel.work_of_art.title),
      desc: () => _t(translations.entityLabel.work_of_art.desc),
      example: () => _t(translations.entityLabel.work_of_art.example),
    },
    language: {
      title: () => _t(translations.entityLabel.language.title),
      desc: () => _t(translations.entityLabel.language.desc),
      example: () => _t(translations.entityLabel.language.example),
    },
    date: {
      title: () => _t(translations.entityLabel.date.title),
      desc: () => _t(translations.entityLabel.date.desc),
      example: () => _t(translations.entityLabel.date.example),
    },
    time: {
      title: () => _t(translations.entityLabel.time.title),
      desc: () => _t(translations.entityLabel.time.desc),
      example: () => _t(translations.entityLabel.time.example),
    },
    percent: {
      title: () => _t(translations.entityLabel.percent.title),
      desc: () => _t(translations.entityLabel.percent.desc),
      example: () => _t(translations.entityLabel.percent.example),
    },
    money: {
      title: () => _t(translations.entityLabel.money.title),
      desc: () => _t(translations.entityLabel.money.desc),
      example: () => _t(translations.entityLabel.money.example),
    },
    quantity: {
      title: () => _t(translations.entityLabel.quantity.title),
      desc: () => _t(translations.entityLabel.quantity.desc),
      example: () => _t(translations.entityLabel.quantity.example),
    },
    ordinal: {
      title: () => _t(translations.entityLabel.ordinal.title),
      desc: () => _t(translations.entityLabel.ordinal.desc),
      example: () => _t(translations.entityLabel.ordinal.example),
    },
    cardinal: {
      title: () => _t(translations.entityLabel.cardinal.title),
      desc: () => _t(translations.entityLabel.cardinal.desc),
      example: () => _t(translations.entityLabel.cardinal.example),
    },
  },
  sentiment: {
    positiveConversation: () => _t(translations.sentiment.positiveConversation),
    negativeConversation: () => _t(translations.sentiment.negativeConversation),
    sentimentScore: () => _t(translations.sentiment.sentimentScore),
    stackedBarChart: () => _t(translations.sentiment.stackedBarChart),
    scatterChart: () => _t(translations.sentiment.scatterChart),
    stackedBarChartTooltip: {
      title: () => _t(translations.sentiment.stackedBarChartTooltip.title),
      bottomDesc: () =>
        _t(translations.sentiment.stackedBarChartTooltip.bottomDesc),
      aggregateSentiment: () =>
        _t(translations.sentiment.stackedBarChartTooltip.aggregateSentiment),
      aggregateSentimentDesc: () =>
        _t(
          translations.sentiment.stackedBarChartTooltip.aggregateSentimentDesc,
        ),
      totalConversation: () =>
        _t(translations.sentiment.stackedBarChartTooltip.totalConversation),
      totalConversationDesc: () =>
        _t(translations.sentiment.stackedBarChartTooltip.totalConversationDesc),
      posNegConversation: () =>
        _t(translations.sentiment.stackedBarChartTooltip.posNegConversation),
      posNegConversationDesc: () =>
        _t(
          translations.sentiment.stackedBarChartTooltip.posNegConversationDesc,
        ),
    },
    scatterChartTooltip: {
      desc1: () => _t(translations.sentiment.scatterChartTooltip.desc1),
      desc2: () => _t(translations.sentiment.scatterChartTooltip.desc2),
      desc3: () => _t(translations.sentiment.scatterChartTooltip.desc3),
      desc4: () => _t(translations.sentiment.scatterChartTooltip.desc4),
      desc5: () => _t(translations.sentiment.scatterChartTooltip.desc5),
    },
    tableTooltip: {
      title: () => _t(translations.sentiment.tableTooltip.title),
      idDesc: () => _t(translations.sentiment.tableTooltip.idDesc),
      speakerDesc: () => _t(translations.sentiment.tableTooltip.speakerDesc),
      scoreDesc: () => _t(translations.sentiment.tableTooltip.scoreDesc),
      magnitudeDesc: () =>
        _t(translations.sentiment.tableTooltip.magnitudeDesc),
      sentenceDesc: () => _t(translations.sentiment.tableTooltip.sentenceDesc),
      bottomDesc: () => _t(translations.sentiment.tableTooltip.bottomDesc),
    },
    dataTable: () => _t(translations.sentiment.dataTable),
    speaker: () => _t(translations.sentiment.speaker),
    score: () => _t(translations.sentiment.score),
    magnitude: () => _t(translations.sentiment.magnitude),
    sentence: () => _t(translations.sentiment.sentence),
    filterSentences: () => _t(translations.sentiment.filterSentences),
    allSpeakers: () => _t(translations.sentiment.allSpeakers),
    allScores: () => _t(translations.sentiment.allScores),
    positiveScores: () => _t(translations.sentiment.positiveScores),
    negativeScores: () => _t(translations.sentiment.negativeScores),
    notProcessTitle: () => _t(translations.sentiment.notProcessTitle),
    clickToProcess: () => _t(translations.sentiment.clickToProcess),
  },
  speakerSegmentTooltip: {
    title: () => _t(translations.speakerSegmentTooltip.title),
    subTitle: () => _t(translations.speakerSegmentTooltip.subTitle),
    desc1: () => _t(translations.speakerSegmentTooltip.desc1),
    desc2: () => _t(translations.speakerSegmentTooltip.desc2),
    desc3: () => _t(translations.speakerSegmentTooltip.desc3),
  },
  customWordsSttV2: {
    header: () => _t(translations.customWordsSttV2.header),
    toolTip1: () => _t(translations.customWordsSttV2.toolTip1),
    toolTip2: () => _t(translations.customWordsSttV2.toolTip2),
    placeHolder: () => _t(translations.customWordsSttV2.placeHolder),
  },
  customEntityTooltip: {
    desc1: () => _t(translations.customEntityTooltip.desc1),
    desc2: () => _t(translations.customEntityTooltip.desc2),
    desc3: () => _t(translations.customEntityTooltip.desc3),
  },
  randomize: () => _t(translations.microphoneTest.randomize),
  startTest: () => _t(translations.microphoneTest.startTest),
  note: () => _t(translations.microphoneTest.note),
  microphoneTest: {
    randomize: () => _t(translations.microphoneTest.randomize),
    startTest: () => _t(translations.microphoneTest.startTest),
    note: () => _t(translations.microphoneTest.note),
    accuracy: () => _t(translations.microphoneTest.accuracy),
    historyTableTitle: () => _t(translations.microphoneTest.historyTableTitle),
    microphoneDevice: () => _t(translations.microphoneTest.microphoneDevice),
    totalWords: () => _t(translations.microphoneTest.totalWords),
    originTexts: {
      text1: () => _t(translations.microphoneTest.originTexts.text1),
      text2: () => _t(translations.microphoneTest.originTexts.text2),
      text3: () => _t(translations.microphoneTest.originTexts.text3),
      text4: () => _t(translations.microphoneTest.originTexts.text4),
      text5: () => _t(translations.microphoneTest.originTexts.text5),
      text6: () => _t(translations.microphoneTest.originTexts.text6),
      text7: () => _t(translations.microphoneTest.originTexts.text7),
      text8: () => _t(translations.microphoneTest.originTexts.text8),
      text9: () => _t(translations.microphoneTest.originTexts.text9),
      text10: () => _t(translations.microphoneTest.originTexts.text10),
    },
    wercerModal: {
      recogAccuracy: () =>
        _t(translations.microphoneTest.wercerModal.recogAccuracy),
      visualizeTitle: () =>
        _t(translations.microphoneTest.wercerModal.visualizeTitle),
      numberCorrectWord: () =>
        _t(translations.microphoneTest.wercerModal.numberCorrectWord),
      numberReplacedWord: () =>
        _t(translations.microphoneTest.wercerModal.numberReplacedWord),
      numberInsertedWord: () =>
        _t(translations.microphoneTest.wercerModal.numberInsertedWord),
      numberDeletedWord: () =>
        _t(translations.microphoneTest.wercerModal.numberDeletedWord),
      werErrorRate: () =>
        _t(translations.microphoneTest.wercerModal.werErrorRate),
      legend1: () => _t(translations.microphoneTest.wercerModal.legend1),
      legend1Desc: () =>
        _t(translations.microphoneTest.wercerModal.legend1Desc),
      legend2: () => _t(translations.microphoneTest.wercerModal.legend2),
      legend2Desc: () =>
        _t(translations.microphoneTest.wercerModal.legend2Desc),
      legend3: () => _t(translations.microphoneTest.wercerModal.legend3),
      legendValue: () =>
        _t(translations.microphoneTest.wercerModal.legendValue),
      item: () => _t(translations.microphoneTest.wercerModal.item),
      value: () => _t(translations.microphoneTest.wercerModal.value),
      targetValue: () =>
        _t(translations.microphoneTest.wercerModal.targetValue),
    },
  },
  tutorial: {
    title1: () => _t(translations.tutorial.title1),
    title2: () => _t(translations.tutorial.title2),
    title3: () => _t(translations.tutorial.title3),
    data: {
      tutorial1: () => _t(translations.tutorial.data.tutorial1),
      tutorial2: () => _t(translations.tutorial.data.tutorial2),
      tutorial3: () => _t(translations.tutorial.data.tutorial3),
      tutorial4: () => _t(translations.tutorial.data.tutorial4),
      tutorial5: () => _t(translations.tutorial.data.tutorial5),
      tutorial6: () => _t(translations.tutorial.data.tutorial6),
      tutorial7: () => _t(translations.tutorial.data.tutorial7),
      tutorial8: () => _t(translations.tutorial.data.tutorial8),
      tutorial9: () => _t(translations.tutorial.data.tutorial9),
      tutorial10: () => _t(translations.tutorial.data.tutorial10),
      tutorial11: () => _t(translations.tutorial.data.tutorial11),
      tutorial12: () => _t(translations.tutorial.data.tutorial12),
      tutorial13: () => _t(translations.tutorial.data.tutorial13),
      tutorial14: () => _t(translations.tutorial.data.tutorial14),
    },
    welcome: {
      title: () => _t(translations.tutorial.welcome.title),
      desc1: () => _t(translations.tutorial.welcome.desc1),
    },
    profileMenu: {
      title: () => _t(translations.tutorial.profileMenu.title),
      desc1: () => _t(translations.tutorial.profileMenu.desc1),
      desc2: () => _t(translations.tutorial.profileMenu.desc2),
    },
    translationTab: {
      title: () => _t(translations.tutorial.translationTab.title),
      desc1: () => _t(translations.tutorial.translationTab.desc1),
      desc2: () => _t(translations.tutorial.translationTab.desc2),
      desc3: () => _t(translations.tutorial.translationTab.desc3),
    },
    recorderTab: {
      title: () => _t(translations.tutorial.recorderTab.title),
      desc1: () => _t(translations.tutorial.recorderTab.desc1),
      desc2: () => _t(translations.tutorial.recorderTab.desc2),
      desc3: () => _t(translations.tutorial.recorderTab.desc3),
    },
    audiosTab: {
      title: () => _t(translations.tutorial.audiosTab.title),
      desc1: () => _t(translations.tutorial.audiosTab.desc1),
      desc2: () => _t(translations.tutorial.audiosTab.desc2),
      desc3: () => _t(translations.tutorial.audiosTab.desc3),
    },
    meetingTab: {
      title: () => _t(translations.tutorial.meetingTab.title),
      desc1: () => _t(translations.tutorial.meetingTab.desc1),
      desc2: () => _t(translations.tutorial.meetingTab.desc2),
      desc3: () => _t(translations.tutorial.meetingTab.desc3),
    },
    startRecording: {
      title: () => _t(translations.tutorial.startRecording.title),
      desc1: () => _t(translations.tutorial.startRecording.desc1),
      desc2: () => _t(translations.tutorial.startRecording.desc2),
      desc3: () => _t(translations.tutorial.startRecording.desc3),
    },
    firework: {
      title: () => _t(translations.tutorial.firework.title),
      desc1: () => _t(translations.tutorial.firework.desc1),
      desc2: () => _t(translations.tutorial.firework.desc2),
    },
  },
  meetingCreation: {
    v2vMeeting: {
      title: () => _t(translations.meetingCreation.v2vMeeting.title),
      headerText: () => _t(translations.meetingCreation.v2vMeeting.headerText),
      desc1: () => _t(translations.meetingCreation.v2vMeeting.desc1),
      desc2: () => _t(translations.meetingCreation.v2vMeeting.desc2),
      desc3: () => _t(translations.meetingCreation.v2vMeeting.desc3),
      desc4: () => _t(translations.meetingCreation.v2vMeeting.desc4),
      desc5: () => _t(translations.meetingCreation.v2vMeeting.desc5),
    },
    teamsMeeting: {
      title: () => _t(translations.meetingCreation.teamsMeeting.title),
      headerText: () => _t(translations.meetingCreation.teamsMeeting.headerText),
      desc1: () => _t(translations.meetingCreation.teamsMeeting.desc1),
      desc2: () => _t(translations.meetingCreation.teamsMeeting.desc2),
      desc3: () => _t(translations.meetingCreation.teamsMeeting.desc3),
    }
  },
  questionTab: {
    header: () => _t(translations.questionTab.header),
    desc1: () => _t(translations.questionTab.desc1),
    desc2: () => _t(translations.questionTab.desc2),
    desc3: () => _t(translations.questionTab.desc3),
  }
};

export type TranslationFunc = () => [string, ...any[]];
